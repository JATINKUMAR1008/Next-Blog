import React, { useEffect, useState } from "react";
import Navbar from "../components/Navbar";
import variables from "../styles/variables.module.scss";
import Head from "next/head";
import SearchBox from "../components/SearchBox.jsx";
import blog from "../components/data";
import bgImg from "../assets/tech.jpg";
import avatar from "../assets/men.jpg";
import buttons from "../styles/buttons.module.scss";

import { BiLike, BiComment } from "react-icons/bi";
import Skeleton, { SkeletonTheme } from "react-loading-skeleton";
import Register from "../components/Register";
import Card from "./Card";
const Content = () => {
  const [click, setClick] = useState(false)
  const handleClick = () => {
    setClick(!click)
  }
  const buttons_cluster = [
    "programming", "data science", "technology", "self improvement", "writing", "relationships", "machine learning", "productivity", "politics"
  ]
  const [load, setLoad] = useState(true)
  function disableScroll() {
    // Get the current page scroll position
    var scrollTop = window.pageYOffset || document.documentElement.scrollTop;
    var scrollLeft = window.pageXOffset || document.documentElement.scrollLeft

    // if any scroll is attempted, set this to the previous value
    window.onscroll = function () {
      window.scrollTo(scrollLeft, scrollTop);
    };
  }

  function enableScroll() {
    window.onscroll = function () { };
  }
  useEffect(() => {
    if (click) {
      disableScroll();
    } else {
      enableScroll()
    }
  }, [click])
  return (
    <>
      <Head>
        <title>Blog - Homeüè†</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      
        <div className={click ? `${variables.content_page}+ ${variables.scroll_stop}` : `${variables.content_page}`}>
          
        <Navbar handleClick={handleClick} />
          <SearchBox />
          
          <div className={variables.cards_box}>
            <div className={variables.card_box_cont}>
            {blog.map((item,key)=>(
        <Card item={item} key={key}/>
      ))}
            </div>
            <div className={variables.button_card_box}>
              <h3>Discover more of what matters to you</h3>
              <div className={variables.buttons_cont}>
                {buttons_cluster.map((item, key) => (
                  <button key={key} className={`${buttons.tag}` + ` ${buttons.big}`}>
                    {item}
                  </button>
                ))}
              </div>
            </div>
          </div>
        </div>
      
      
      <Register click={click} handleClick={handleClick} />
    </>
  );
};

export default Content;
